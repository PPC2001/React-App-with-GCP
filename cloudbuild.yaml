steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', '-t',
      'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA',
      '--build-arg', 'NPM_SCRIPT=$(if grep -q \'"build"\' package.json; then echo build; else echo install; fi)',
      '.'
    ]

  # Step 2: Push to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA'
    ]

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', '$_IMAGE_NAME',
      '--image', 'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA',
      '--region', 'us-west4',
      '--platform', 'managed',
      '--allow-unauthenticated'
    ]

  # Step 4: Deploy to GKE (optional - keep if needed)
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials onlineboutique-cluster-960 \
          --zone us-west4-c \
          --project $PROJECT_ID
        kubectl apply -f k8s/deployment.yaml

images:
  - 'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA'
