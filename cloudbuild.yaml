steps:
  # Step 1: Build Docker image (multi-stage)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA',
      '--build-arg', 'NODE_ENV=production',
      '.'
    ]
    id: 'build-image'

  # Step 2: Push to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA'
    ]
    id: 'push-image'
    waitFor: ['build-image']

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', '$_IMAGE_NAME',
      '--image', 'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA',
      '--region', 'us-west4',
      '--platform', 'managed',
      '--port', '80',
      '--set-env-vars', 'NODE_ENV=production',
      '--allow-unauthenticated'
    ]
    id: 'deploy-cloud-run'
    waitFor: ['push-image']

  # Step 4: Deploy to GKE (optional)
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials onlineboutique-cluster-960 \
          --zone us-west4-c \
          --project $PROJECT_ID
        kubectl set image deployment/$_IMAGE_NAME $_IMAGE_NAME=us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA
    id: 'deploy-gke'
    waitFor: ['push-image']

images:
  - 'us-west4-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME:$COMMIT_SHA'
